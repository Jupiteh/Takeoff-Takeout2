{"ast":null,"code":"var _jsxFileName = \"C:\\\\projet web avanc\\xE9\\\\Takeoff-Takeout\\\\client\\\\src\\\\pages\\\\orderRequestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { restaurantApi, orderApi } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderRequestPage() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [restaurateurId, setRestaurateurId] = useState(1); // Remplacer par l'ID du restaurateur réel\n\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await restaurantApi.get(`/restaurants/restaurateur/${restaurateurId}`);\n        setRestaurants(response.data);\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n      }\n    };\n    fetchRestaurants();\n  }, [restaurateurId]);\n  useEffect(() => {\n    const fetchOrders = async restaurantIds => {\n      try {\n        const response = await orderApi.get(`/orders/confirmed/${restaurantIds.join(',')}`);\n        setOrders(response.data);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n    if (restaurants.length > 0) {\n      const restaurantIds = restaurants.map(restaurant => restaurant.ID_Restaurant);\n      fetchOrders(restaurantIds);\n    }\n  }, [restaurants]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), orders.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Commande num\\xE9ro: \", order.ID_Order]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prix: \", order.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Articles: \", order.articles.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, order.ID_Order, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No confirmed orders found for your restaurants.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderRequestPage, \"7/xFyCPbmguoAPwoTZOPixbuRcM=\");\n_c = OrderRequestPage;\nexport default OrderRequestPage;\nvar _c;\n$RefreshReg$(_c, \"OrderRequestPage\");","map":{"version":3,"names":["React","useState","useEffect","restaurantApi","orderApi","jsxDEV","_jsxDEV","OrderRequestPage","_s","restaurants","setRestaurants","orders","setOrders","restaurateurId","setRestaurateurId","fetchRestaurants","response","get","data","error","console","fetchOrders","restaurantIds","join","length","map","restaurant","ID_Restaurant","children","fileName","_jsxFileName","lineNumber","columnNumber","order","ID_Order","price","articles","_c","$RefreshReg$"],"sources":["C:/projet web avancé/Takeoff-Takeout/client/src/pages/orderRequestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { restaurantApi, orderApi } from '../api/api';\r\n\r\nfunction OrderRequestPage() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [restaurateurId, setRestaurateurId] = useState(1); // Remplacer par l'ID du restaurateur réel\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurants = async () => {\r\n      try {\r\n        const response = await restaurantApi.get(`/restaurants/restaurateur/${restaurateurId}`);\r\n        setRestaurants(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching restaurants:', error);\r\n      }\r\n    };\r\n\r\n    fetchRestaurants();\r\n  }, [restaurateurId]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async (restaurantIds) => {\r\n      try {\r\n        const response = await orderApi.get(`/orders/confirmed/${restaurantIds.join(',')}`);\r\n        setOrders(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    if (restaurants.length > 0) {\r\n      const restaurantIds = restaurants.map((restaurant) => restaurant.ID_Restaurant);\r\n      fetchOrders(restaurantIds);\r\n    }\r\n  }, [restaurants]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Order Requests</h1>\r\n      {orders.length > 0 ? (\r\n        <ul>\r\n          {orders.map((order) => (\r\n            <li key={order.ID_Order}>\r\n              <p>Commande numéro: {order.ID_Order}</p>\r\n              {/* <p>Restaurant ID: {order.ID_Restaurant}</p> */}\r\n              {/* <p>Client ID: {order.ID_Client}</p> */}\r\n              <p>Prix: {order.price}</p>\r\n              <p>Articles: {order.articles.join(', ')}</p>\r\n              {/* <p>State: {order.state}</p> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No confirmed orders found for your restaurants.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderRequestPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}